<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:dd="http://bccho.com/ignore"
                    mc:Ignorable="dd">
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="Background" Value="#ffffff"/>-->
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="#cccccc"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="#333333"/>
        <!--<Setter Property="Foreground" Value="#FFDACCCC"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="true"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border dd:Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                        <ContentPresenter 
                                    dd:Name="Presenter" 
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="#333333" />-->
                            <Setter Property="Foreground" Value="#aaaaaaaa" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#dddddd" />-->
                            <Setter Property="Background" Value="DarkGray" />
                            <Setter Property="BorderBrush" Value="#cccccc" />
                            <Setter Property="Foreground" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1ba1e2" />
                            <!--<Setter Property="BorderBrush" Value="#1ba1e2"/>-->
                            <Setter Property="BorderBrush" Value="PaleVioletRed" />
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,2,2,2"/>
    </Style>


    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="#cccccc"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="#333333" />-->
                            <Setter Property="Foreground" Value="#aaaaaaaa" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#dddddd" />-->
                            <Setter Property="Background" Value="DarkGray" />
                            <Setter Property="BorderBrush" Value="#cccccc" />
                            <Setter Property="Foreground" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1ba1e2" />
                            <!--<Setter Property="BorderBrush" Value="#1ba1e2"/>-->
                            <Setter Property="BorderBrush" Value="PaleVioletRed" />
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="PaleVioletRed" />
                        </Trigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="#cccccc"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#aaaaaaaa" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray" />
                            <Setter Property="BorderBrush" Value="#cccccc" />
                            <Setter Property="Foreground" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1ba1e2" />
                            <!--<Setter Property="BorderBrush" Value="PaleVioletRed" />-->
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="#25A0DA" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>