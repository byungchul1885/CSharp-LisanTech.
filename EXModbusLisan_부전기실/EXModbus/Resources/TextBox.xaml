<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TextBoxFieldValue" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" 
                Value="12"/>
        <Setter Property="FontFamily" 
                Value="Courier New"/>
        <Setter Property="MaxLength" 
                Value="{Binding TotalLength}"/>
        <Setter Property="Width" 
                Value="{Binding Width}"/>
        <Setter Property="Background" 
                Value="{Binding BackColor}"/>
        <Setter Property="IsReadOnly" 
                Value="{Binding IsReadOnly}"/>
        <Setter Property="Visibility" 
                Value="{Binding Visible}"/>        
        <Setter Property="CharacterCasing" 
                Value="Upper"/>
        <Setter Property="HorizontalAlignment" 
                Value="Left"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="ToolTipService.ShowDuration" 
                Value="60000"/>
        <Setter Property="ToolTipService.InitialShowDelay" 
                Value="0"/>
        <Setter Property="Text">
            <Setter.Value>
                <Binding Path="FieldValue" 
                         NotifyOnValidationError="true" 
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right"
                                   Foreground="Red" 
                                   FontSize="14" 
                                   FontWeight="Bold"
                                   >*
                        </TextBlock>
                        <Border BorderBrush="Green" 
                                BorderThickness="1">
                            <AdornedElementPlaceholder Name="adornerPlaceholder"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="Validation.HasError" 
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxFieldExHeader" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxFieldValue}">
        <Setter Property="Visibility" 
                Value="{Binding HeaderVisible}">
        </Setter>
    </Style>

    <Style x:Key="TextBoxFieldExData" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxFieldValue}">
        <Setter Property="Visibility" 
                Value="{Binding DataVisible}">
        </Setter>
    </Style>

    <Style x:Key="TextBoxResult" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" 
                Value="12"/>
        <Setter Property="FontWeight" 
                Value="Normal"/>
        <Setter Property="FontFamily" 
                Value="Courier New"/>
        <Setter Property="IsReadOnly" 
                Value="True"/>
        <Setter Property="HorizontalAlignment" 
                Value="Left"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>        
        <Setter Property="Background" 
                Value="WhiteSmoke"/>
    </Style>

    <Style x:Key="TextBoxResultDataDump" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxResult}">
        <!--<Setter Property="HorizontalAlignment" 
                Value="Stretch" />-->
        <Setter Property="TextWrapping" 
                Value="Wrap" />
    </Style>

    <Style x:Key="TextBoxResultDigitStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" 
                Value="12"/>
        <Setter Property="FontWeight" 
                Value="Normal"/>
        <Setter Property="FontFamily" 
                Value="Courier New"/>
        <Setter Property="IsReadOnly" 
                Value="True"/>
        <Setter Property="HorizontalAlignment" 
                Value="Left"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Right"/>
        <Setter Property="Background" 
                Value="WhiteSmoke"/>
        <Setter Property="MaxLength" 
                Value="7"/>
    </Style>

    <Style x:Key="TextBoxExMulticastInputStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" 
                Value="12"/>
        <Setter Property="Height" 
                Value="20"/>
        <Setter Property="Margin" 
                Value="0,5,0,5"/>
        <Setter Property="FontWeight" 
                Value="Normal"/>
        <Setter Property="FontFamily" 
                Value="Courier New"/>
        <Setter Property="IsReadOnly" 
                Value="False"/>
        <Setter Property="HorizontalAlignment" 
                Value="Left"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment" 
                Value="Right"/>
        <Setter Property="Background" 
                Value="WhiteSmoke"/>
        <Setter Property="CharacterCasing" 
                Value="Upper"/>
    </Style>

    <Style x:Key="TextBoxStateResultStyle" TargetType="{x:Type TextBox}" 
           BasedOn="{StaticResource TextBoxResult}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Time Out"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Red"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Recv OK"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Blue"/>
            </MultiDataTrigger>
        </Style.Triggers>        
    </Style>
</ResourceDictionary>