<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>